koh.sp = RAM 800d424c - 800f3450

r90 = 801d~ - 2590 = 801cda70
rd0 = 801d~ - 25d0 = 801cda30

sect0
RAM 800d4270 = 24 + dec
	80039394  move  a3, s5
	80039398  lh    a0, dc(s1)
	8003939c  lhu   a1,  2(s1)
	800393a0  lhu   a2,  6(s1)
	800393a4  jal   80042788

		a1 = a1 * 4 + sect0
	8004277c  lw   v1, 0(a1)
		v0 = sect0 + v1
	80042790  lbu  v1, 0(v0) -> sh  0(a3) // 0
		v0++
	8004279c  lbu  v1, 0(v0) -> sh  2(a3) // 1  cnt
		v0 = v0 + 1 + a2 * 8
	800427ac  lbu  v1, 0(v0) -> sh  4(a3) // 0  key id
		v0++
		v1 * 4 + sect1
	800427b8  lbu  v1, 0(v0) -> sh  6(a3) // 1  fps
		v0++
	800427c4  lbu  v1, 0(v0) -> sh  8(a3) // 2
		v0++
	800427d0  lbu  v1, 0(v0) -> sh  a(a3) // 3
		v0++
	800427dc  lbu  v1, 0(v0) -> sh  c(a3) // 4
		v0++
	800427e8  lbu  v1, 0(v0) -> sh  e(a3) // 5
		v0++
	800427f4  lbu  v1, 0(v0) -> sh 10(a3) // 6
	80042800  lbu  v1, 1(v0)           // 7  flags
		v1 &= ~2
		v1 &= ~4
		v1 -> sh 12(a3)

sect1
RAM 800d5060 = e14 + 1c9b
	80042844  lw   v0, 0(v0)
		a0 = sect1 + v0
	80042850  lbu  v0, 0(a0) -> sh 14(a3) // 0
		a0++
	8004285c  lbu  v0, 0(a0) -> sh 16(a3) // 1
		a0++
	80042868  lbu  v0, 0(a0) -> sh 18(a3) // 2
		a0++
	80042874  lbu  v0, 0(a0) -> sh 1a(a3) // 3
		a0++
	80042880  lbu  v0, 0(a0) -> sh 1c(a3) // 4
		a0++
	8004288c  lbu  v0, 0(a0) -> sh 1e(a3) // 5
		a0++
	80042898  lbu  v1, 0(a0) // 6
		if v1 & 80
			v1 |= ff00
		a0++
		v1 -> sh 20(a3)
	800428b8  lbu  v1, 0(a0) // 7
		if v1 & 80
			v1 |= ff00
		a0++
		v1 -> sh 22(a3)
	800428d8  lbu  v0, 0(a0) -> sh 24(a3) // 8
		a0++
	800428ec  lbu  v0, 0(a0) -> sh 26(a3) // 9
		a0++
	800428f8  lbu  v0, 0(a0) -> sh 28(a3) // a
		a0++
	80042904  lbu  v0, 0(a0) -> sh 2a(a3) // b
		a0++
	80042910  lbu  v0, 0(a0) -> sh 2c(a3) // c
		a0++
	8004291c  lbu  v0, 0(a0) -> sh 2e(a3) // d
		a0++
	80042928  lbu  v0, 0(a0) -> sh 30(a3) // e
		a0++
	80042934  lbu  v0, 0(a0) -> sw 34(a3) // f
		a0++
	80042940  lbu  v0, 0(a0) -> sw 38(a3) // 10
		a0++
	a2 = a3
	v1 = a3
	while  14(a3) > 0
		80042958  lbu  v0, 0(a0) -> sw 3c(v1) // 0
			a0++
		80042968  lbu  v0, 0(a0) -> sw 48(v1) // 1
			a0++
		80042974  lbu  v0, 0(a0) -> sh 54(a2) // 2
			a0++
		80042984  lbu  v0, 0(a0) -> sh 5a(a2) // 3
			a0++
		v1 += 4
		a2 += 2
	a2 = a3
	v1 = a3
	while  16(a3) > 0
		800429bc  lbu  v0, 0(a0) -> sw 60(v1) // 0
			a0++
		800429cc  lbu  v0, 0(a0) -> sw 6c(v1) // 1
			a0++
		800429d8  lbu  v0, 0(a0) -> sh 78(a2) // 2
			a0++
		800429e8  lbu  v0, 0(a0) -> sh 7e(a2) // 3
			a0++
		v1 += 4
		a2 += 2
	a2 = a3
	v1 = a3
	while  18(a3) > 0
		80042a20  lbu  v0, 0(a0) -> sw 84(v1) // 0
			a0++
		80042a30  lbu  v0, 0(a0) -> sw 90(v1) // 1
			a0++
		80042a3c  lbu  v0, 0(a0) -> sh 9c(a2) // 2
			a0++
		80042a4c  lbu  v0, 0(a0) -> sh a2(a2) // 3
			a0++
		v1 += 4
		a2 += 2
	a2 = a3
	v1 = a3
	while  1a(a3) > 0
		80042a84  lbu  v0, 0(a0) -> sw a8(v1) // 0
			a0++
		80042a94  lbu  v0, 0(a0) -> sw ac(v1) // 1
			a0++
		80042aa0  lbu  v0, 0(a0) -> sh b0(a2) // 2
			a0++
		80042ab0  lbu  v0, 0(a0) -> sh b2(a2) // 3
			a0++
		v1 += 4
		a2 += 2

sect2  keyframe
RAM 800d6cfc = 2ab0 + 4550
	8007a578  lw  v0, c(s4)
		s4 = ((v0 << 2) >> 2) + sect2
		s4 += a1 << 2
	8007a63c  lw  v0, 0(s4)
		s4 = t0 + v0
	8007a6fc  lw  t6, 0(s4)
		s4 += 4
		v0 = 800a0270 + t6
	8007a768  lw  v0, 0(s4) // 0
		s4 += 4
		a3 = v0 >> 18
		a1 = v0 >> 10
		t5 = v0 >> 8  -> 60(sp)
		fp = v0
	8007a784  lw  v1, 0(s4) // 4
		v1 &= f000~
		if  v1 === 2000~
			t1 = s6 = t4 = t2 = s7 = 10
		else
			t1 = s6 = t4 = t2 = s7 = 20
	8007a7c4  lw  a0, 0(s4) // 4
		s4 += 4
	8007a7cc  lw  v1, 0(s4) // 8
		s4 += 4
		(a0 >>  6) & f  -> 68(sp)
		(a0 >>  f) & 1  -> 78(sp)
		(a0 >> 15) & 3  -> 80(sp)
		v1 >> 1e + (v1 >> 1a) & c + (v1 >> d) & 7f0  -> 70(sp)
	8007a818  lw  a0, 0(s4) // c
		v0 = (a0 & f000~) ^ f000~
		v1 = v0 < 1
		if  (a0 & f000) === f000
			t3 = v1 | 2
		else
			t3 = v1
		s4 += 4
		t0 = (a1 & ff) - 80
		a3 -= 80
		if ( (s2 & ff) === 0 )

	// fedcba98 76543210 fedcba98 76543210
	0  11111111 22222222 33333333 44444444
	4  1111---- -44----- 3-----22 22------
	8  1122..-- 3333333. ...----- --------
	c  1111---- -------- 2222---- --------

sect3  pix
RAM 800db250 = 7004 + 18200
==============================
v1 = 1 << 1 + 1
v1 << 4 - v1 << 2
= 11 , 1-11 -1--
= b4 , 5a*2 , 2d*4

801d4b40      + n * b4
801d4b4e[+ e] + n * b4
801d4b64[+24] + n * b4

[801d4b40..801d4bf3]?!!
	00  sect0 [0] is load
		80034e04  sh    0, v0(801d4b40)
		8004242c  lhu  v1,  0(s1)
			if  v1 == 1
				if  a(s0) < ff && 6(s1) > 0
					if  128(a0) > 0
					else
						a(s0)++
				else
			else
		800424f4  lhu  v0, 0(s1)
			if  v0 == 0
				sub_80042758( dc(s0) , 2(s0) , 6(s0) , s2 )
				0(s1) = 1
			else
		80048184  sh   v0, t0(801d4b40)
		80056134  sh   v0, t0(801d4b40)
	02  sect0 [1] cnt
		8004247c  lhu  v0, 2(s1)

	04  sect0 + i*8 [0] slot id
		80042834  lhu  v0, 4(a3)
			v0 << 2 + sect1
	06  sect0 + i*8 [1] fps
		80042440  lhu  v0, 6(s1)
		80034e3c  lhu  v0, v0(801d4b46)
	08  sect0 + i*8 [2]
		800393fc  lhu  s4, 8(s2) -> 2c(sp)
		80039408  lhu  a0, 8(s2)
			if  a0 == v1
			else
	0a  sect0 + i*8 [3]
	0c  sect0 + i*8 [4]
		80036f70  lhu  v0, v1(801d4b4c)
			if  v0 & 1
			else
		8003b868  sh  0, v0(801d4b4c)

		case  0(s0)
			10:
				jal  8005b844
				case  72(s1)
					8:
						8005b8e4  sh  0, v0(801d4b4c)
					9:
						8005b918  sh  0, v0(801d4b4c)
				esac
			13:
				jal  8005bc1c
				case  72(s1)
					8:
						8005bcbc  sh  0, v0(801d4b4c)
					9:
						8005bce8  sh  0, v0(801d4b4c)
				esac
			11:
				jal  8005c3dc
				case  72(s1)
					8:
						8005c47c  sh  0, v0(801d4b4c)
				esac
			1b:
				jal  8005c660
				case  72(s1)
					8:
						8005c730  sh  0, v0(801d4b4c)
				esac
			12:
				jal  8005dd8c
				case  72(s1)
					8:
						8005de64  sh  0, v0(801d4b4c)
					9:
						8005de90  sh  0, v0(801d4b4c)
					a:
						8005debc  sh  0, v0(801d4b4c)
					b:
						8005dee8  sh  0, v0(801d4b4c)
				esac
			case 18:
				jal  8005e0cc
				case  72(s1)
					8:
						8005e1b0  sh  0, v0(801d4b4c)
					9:
						8005e1e4  sh  0, v0(801d4b4c)
					a:
						8005e210  sh  0, v0(801d4b4c)
					b:
						8005e23c  sh  0, v0(801d4b4c)
				esac
			case 15:
				jal  8005e4d8
				case  72(s1)
					8:
						8005e5c0  sh  0, v0(801d4b4c)
					9:
						8005e5ec  sh  0, v0(801d4b4c)
					a
						8005e618  sh  0, v0(801d4b4c)
					b:
						8005e644  sh  0, v0(801d4b4c)
				esac
		esac

	0e  sect0 + i*8 [5]
		8003a2a4  sh   v0, v1(801d4b4e) // f ->
		8003b85c  sh    0, v0(801d4b4e)
		8004163c  sh   v0, v1(801d4b4e) // 7f ->
		80041d58  lhu  v0, v1(801d4b4e)
			if v0 > 0
			else
		80041e90  lhu  v0, s2(801d4b4e)
			s0 = 3
			while  s0 >= 0
				a0 = 1 << s0
				if  (v0 & a0) == a0
				else
				s0--
		80041eec  lhu  v0, s2(801d4b4e)
			s0 = 3
			while  s0 >= 0
				a0 = 1 << s0
				if  (v0 & a0) == a0
				else
				s0--
		80041f5c  lh   v0, 128(s5)
			if v0 > 0
			else
		80044918  sh   v0, v1(801d4b4e) // f ->
		80044c3c  sh   v0, v1(801d4b4e) // f ->
		80045648  sh   v0, v1(801d4b4e) // 60 ->

	10  sect0 + i*8 [6]
		8004165c  lhu  v0, v1(801d4b50)
			if ( v0 == 0 )
			else

		8003b850  sh    0, v0(801d4b50)
		8004162c  sh   v0, v1(801d4b50) // f ->
		8004165c  lhu  v0, v1(801d4b50)
			if v0 == 0
			else
		80041830  lhu  v0, v0(801d4b50)
			s0 = 2
			while  s0 >= 0
				a0 = 1 << s0
				if  (v0 & a0) == a0
				else
				s0--
		80044908  sh   v0, v1(801d4b50) // 6 ->
		80044c2c  sh   v0, v1(801d4b50) // 6 ->
		80045658  sh   v0, v1(801d4b50) // 7 ->
		80045b7c  sh   s0, v1(801d4b50) // 1 ->

	12  sect0 + i*8 [7] flag
		80018b38  lhu  v0, s2(801b4b52)
			if  v0 & 4
				jal  80034bb0(s1 , s0)
				80018b6c  lhu  v0, s2(801b4b52)
					v0 &= fb
				80018b70  sh   v0, s2(801d4b52)
			else
		80034a0c  lhu  v1, a1(801d4b52)
			v1 |= 4
		80034a20  sh   v1, a1(801d4b52)
		80034a70  lhu  v0, v1(801d4b52)
			v1 |= 1
		80034a84  sh   v0, v1(801d4b52)
		80039364  lhu  v0, 12(a3)
			if  v0 & 4
				return
			else
				lh  v0, da(s1)
				if  v0 == 0
					return
				else
					80039388  lhu  v0, 0(s2)
					if  v0 == 0
						sub_80042758( dc(s1) , 2(s1) , 6(s1) , s5 )
					else
		8004223c  lhu  v0, v0(801d4b52)
			if  v0 & 4
			else
				if  sub_80042074(s0 , s1)
				else
					sub_80035ddc(s0 , s1)
					s2 = sub_8003587c(s0 , s1)
					if  s2 == -1
						v0 = sub_80035b7c(s0 , s1)
						if  v0 == -1
							sub_80035610(s0 , s1)
							sub_800353c8(s0 , s1)
						else
					else
		80042524  lhu  v0, 12(s1)
			if  v0 & 1
				sub_80034c84(s2)
				80042540  lhu  v0, 12(s1)
				v0 &= fe
			else
		800425a8  lhu  v0, 12(s1)
			s2 = v0 & f8
			if  s2 & 10
				sub_80042adc(s3 , 4 , s0 , s1)
			else
			if  s2 & 8
				sub_80042adc(s3 , 3 , s0 , s1)
			else
			if  s2_& 20
				sub_80042adc(s3 , 2 , s0 , s1)
			else
			if  s2_& 40
				sub_80042adc(s3 , 1 , s0 , s1)
			else
			if  s2_& 80
				136(s4) |= 2c(s1)
			else
				136(s4) |= 1
		8004281c  lhu  v1, 12(a3)
			v1 &= ~4

	14  sect1 [0] cnt0
		800428e0  lhu  v1, 14(a3)
			if v1 > 0
		80042990  lhu  v0, 14(a3)
			if a1 < v0  loop
	16  sect1 [1] cnt1
		800429a4  lhu  v0, 16(a3)
			if v1 > 0
		800429f4  lhu  v0, 16(a3)
			if a1 < v0  loop
	18  sect1 [2] cnt2
		80042a08  lhu  v0, 18(a3)
			if v1 > 0
		80042a58  lhu  v0, 18(a3)
			if a1 < v0  loop
	1a  sect1 [3] cnt3
		80042a6c  lhu  v0, 1a(a3)
			if v1 > 0
		80042abc  lhu  v0, 1a(a3)
			if a1 < v0  loop

	1c  sect1 [4] key id
		8003966c  lhu  v0, 1c(s2) -> 24(sp)

	1e  sect1 [5]
		8003667c  lhu  v0, a1(801d4b5e)
			128(s1) |= (v0 + 1)
		80036698  lhu  v0, a1(801d4b5e)
			128(s4) |= (v0 + 1)
		800368cc  lhu  v0, a2(801d4b5e)
			128(s4) |= (v0 + 1)
		800371fc  lhu  v0, s1(801d4b5e)
			128(s0) = v0
		80037210  lhu  v0, s1(801d4b5e)
			128(s4) = v0
		80037448  lhu  v0, v0(801d4b5e)
			128(s0) = v0
			136(s0) = v0
		80037c08  lhu  v0, a2(801d4b5e)
			128(s0) = v0
		80037c1c  lhu  v0, a2(801d4b5e)
			128(s4) = v0
		80037f80  lhu  v1, s1(801d4b5e)
			128(s0) = v1
		80038108  lhu  v0, a2(801d4b5e)
			128(s0) = v0
		8003811c  lhu  v0, a2(801d4b5e)
			128(s3) = v0
		800382c0  lhu  v0, v1(801d4b5e)
			128(s0) = v0
			136(s0) = v0

	20  sect1 [6] sint8
		80019aac  lh   v0, v1(801d4b60)
			a3 = v0 * 2
			if  126(a1) === 9
				10c(a1) = -a3
			else
				10c(a1) = a3
		if  4(v0) == 0
			80019e00  lh   v1, v0(801d4b60)
		else
			80019e20  lh   v1, v0(801d4b60)
		if  4(v0) == 1
			80036364  lh   v1, s2(801d4b60)
		else
			800363d8  lh   v1, v0(801d4b60)
		80037ed0  lh   v0, a0(801d4b60)

	22  sect1 [7] sint8
		80019ab8  lh   v1, v1(801d4b62)
			110(a1) = v0 * 3
		80019e54  lh   v0, v0(801d4b62)
		800378bc  lh   v0, v0(801d4b62)
			if  v0 > 0
			else
		8003799c  lh   v0, v0(801d4b62)
			if  v0 > 0
			else
		80037b20  lh   v0, v0(801d4b62)
			if  v0 > 0
			else
		80038650  lh   v1, v1(801d4b62)

	24  sect1 [8]
		80019a84  lhu  a0, v1(801d4b64)
		800366b4  lhu  a2, a1(801d4b64)
		800368e8  lhu  a2, a2(801d4b64)
		80036a58  lhu  v0, v0(801d4b64)
		80037d48  lhu  v1, a2(801d4b64)
			t0 = v1 * 2/3
			a2 = t0 >> 2
		80037d80  lhu  a2, a2(801d4b64)
			a2 >>= 3
		8003824c  lhu  v1, a2(801d4b64)
			t0 = v1 * 2/3
			a2 = t0 >> 2
		80038284  lhu  a2, a2(801d4b64)
			a2 >>= 3
		80043b38  lhu  v0, v0(801d4b64)
			100(plwork) = -v0 << 1
		80043b80  lhu  v0, v0(801d4b64)
			100(plwork) = v0 << 1

	26  sect1 [9]
		80019a90  lhu  v0, v1(801d4b66)
		800366c0  lhu  a3, a1(801d4b66)

	28  sect1 [a]
		8003684c  lhu  v0, v1(801d4b68)
			v0 &= 10
		80036934  lhu  v0, v0(801d4b68)
			v1 = v0 >> 5
		800376c4  lhu  v0, s1(801d4b68)
			2(s0) = (v0 & f) + f
		80037ea8  lhu  v0, a0(801d4b68)
			v1 = v0 & f
			if  v1 < 3
				if  v1 == 0
			else
		800384c0  lhu  v0, v0(801d4b68)
			s3 = v0 & f  // switch 6

	2a  sect1 [b]
		8001a728  lhu  v0, a1(801d4b6a)
			v0 &= 3
		8001b160  lhu  v0, v0(801d4b6a)
			v0 &= 3
		8001b1b4  lhu  v0, v0(801d4b6a)
			v0 &= 3
		80036324  lhu  v0, s2(801d4b6a)
			v0 &= 4
		80036bec  lhu  v0, v1(801d4b6a)
			v0 &= 3
		80036cd4  lhu  v0, v1(801d4b6a)
			v0 &= 3
		80037230  lhu  v0, s1(801d4b6a)
			v0 &= 3
		800373c0  lhu  v0, v1(801d4b6a)
			v0 &= 3
		800374b0  lhu  v0, v1(801d4b6a)
			v0 &= 3
		800377d0  lhu  v0, v1(801d4b6a)
			v0 &= 3
		800377f4  lhu  v0, s1(801d4b6a)
			v0 &= 3
		80037c88  lhu  v0, a2(801d4b6a)
			v0 &= 3
		80037e4c  lhu  v0, v1(801d4b6a)
			v0 &= 3
		80037fb0  lhu  v0, s1(801d4b6a)
			v0 &= 3
		80038188  lhu  v0, a2(801d4b6a)
			v0 &= 3
		800382d8  lhu  v0, v1(801d4b6a)
			v0 &= 3
		8003837c  lhu  v0, a0(801d4b6a)
			v0 &= 3
		80038594  lhu  v0, v1(801d4b6a)
			v0 &= 3
		800385fc  lhu  v0, v1(801d4b6a)
			v0 &= 3
		80038724  lhu  v0, v0(801d4b6a)
			v0 >>= 4
		80038840  lhu  v0, v1(801d4b6a)
			v0 &= 3
		8003893c  lhu  v0, v1(801d4b6a)
			v0 >>= 4

	2c  sect1 [c]
		80042718  lhu  v1, 2c(s1)
			136(s4) |= v1

	2e  sect1 [d]
		8001a78c  lhu  v1, a1(801d4b6e)
		8001a848  lhu  v1, a1(801d4b6e)
		80036c34  lhu  v1, v1(801d4b6e)
		80036d1c  lhu  v1, v1(801d4b6e)
		80036dc8  lhu  a2, v0(801d4b6e)
		80037278  lhu  v1, s1(801d4b6e)
		80037364  lhu  v1, v1(801d4b6e)
		80037770  lhu  v1, s1(801d4b6e)
		80037d20  lhu  v1, a2(801d4b6e)
		80037dcc  lhu  v1, v1(801d4b6e)
		80037ff8  lhu  v1, s1(801d4b6e)
		80038220  lhu  v1, a2(801d4b6e)
		800383c4  lhu  v1, a0(801d4b6e)
		80038868  lhu  v0, v1(801d4b6e)

	30  sect1 [e]
		80035368  lhu  v0, v0(801d4b70)
			v0 &= s6
		80036fd4  lhu  v0, v1(801d4b70)
			v0 &= 1
		80037008  lhu  v0, v1(801d4b70)
			v0 &= 2
		8003703c  lhu  v0, v1(801d4b70)
			v0 &= 4
		800370d0  lhu  v0, v1(801d4b70)
			v0 &= 4

	34  sect1 [f]  sint
		lhu  v0, 310(s1)
			if v0 & 1
			else
				80039538  lw  v1, 34(s2)
					s3 = sint8(v1)
		lhu  v0, 0(801cc98a)
			case v0 & 3
				1:
					800394cc  lw  v1, 34(s2)
						s3 = sint8(v1) + 1
				3:
					800394f4  lw  v1, 34(s2)
						s3 = sint8(v1) - 1
				def:
					8003951c  lw  v1, 34(s2)
						s3 = sint8(v1)
			esac
		s3 -> 18(sp)
	38  sect1 [10]  sint
		lhu  v0, 310(s1)
			if v0 & 2
			else
				80039604  lw  v1, 38(s2)
					s0 = sint8(v1)
		lhu  v0, 0(801cc98a)
			case v0 & 3
				1:
					80039598  lw  v1, 38(s2)
						s0 = sint8(v1) + 1
				3:
					800395c0  lw  v1, 38(s2)
						s0 = sint8(v1) - 1
				def:
					800395e8  lw  v1, 38(s2)
						s0 = sint8(v1)
			esac
		s0 -> 1c(sp)

	cnt0
		0 : 3c  48  54  5a
		1 : 40  4c  56  5c
		2 : 44  50  58  5e
		80042df0  lw  a1, 3c(s0)
			a1 = sint8(a1)
		80042e10  lw  a2, 48(s0)
			a2 = sint8(a2)
		80042e30  lhu  v1, 54(s1)
			a3 = sint8(v1)  -> 10(sp)
		80042e48  lhu  v1, 5a(s1)
			v0 = sint8(v1)  -> 14(sp)
	cnt1
		0 : 60  6c  78  7e
		1 : 64  70  7a  80
		2 : 68  74  7c  82
		80042ec0  lw  a1, 60(s0)
			a1 = sint8(a1)
		80042ee0  lw  a2, 6c(s0)
			a2 = sint8(a2)
		80042f00  lhu  v1, 78(s1)
			a3 = sint8(v1)  -> 10(sp)
		80042f18  lhu  v1, 7e(s1)
			v0 = sint8(v1)  -> 14(sp)
	cnt2
		0 : 84  90  9c  a2
		1 : 88  94  9e  a4
		2 : 8c  98  a0  a6
		80042d20  lw  a1, 84(s0)
			a1 = sint8(a1)
		80042d40  lw  a2, 90(s0)
			a2 = sint8(a2)
		80042d60  lhu  v1, 9c(s1)
			a3 = sint8(v1)  -> 10(sp)
		80042d78  lhu  v1, a2(s1)
			v0 = sint8(v1)  -> 14(sp)
	cnt3
		0 : a8  ac  b0  b2
		80042c38  lw  a1, a8(s2)
			a1 = sint8(a1)
			a1 += 34(s2)
		80042c68  lw  a2, ac(s2)
			a2 = sint8(a2)
			a2 += 38(s2)
		80042c94  lhu  v1, b0(v0)
			a3 = sint8(v1)  -> 10(sp)
		80042cbc  lhu  v1, b2(v0)
			v0 = sint8(v1)  -> 14(sp)

// a0 = s1
// a1 = s0
// a2 = s1 * b4
// sub_800423b4(s2 , s0 , s1)

==============================
1 << 1 + 1 << 3 + 1 << 3 + 1 << 2
= 11 --1- -1--
= 324 , 192*2 , c9*4

801ddaa0      + n * 324
801ddb88[+e8] + n * 324

[801ddaa0..801dddc3]?!!
	00
		80020408  lhu  v1, 0(s0)
			if v1 === f0
				break
			if v1 >= f1
				if v1 === fa
					break
				if v1 === ff
					break
			if v1 === 0
				break
			if v1 === 80
				break
	02  // anim id
		80020444  lhu  v0, 2(s0)
			if v0 >= c0
				break
		800393a0  lhu  a1, 2(s1)
		80043a94  sh   v0, 2(s1) // 2 ->
		80043ab4  sh   v0, 2(s1) // 6 ->
		80043af8  sh   v0, 2(s1) // 5 ->
		80043b20  sh   v0, 2(s1) // 4 ->
		80043b68  sh   v0, 2(s1) // 4 ->
		80043bdc  lhu  v1, 2(s1)
		80043c64  sh   v0, 2(s1) // e ->
		80043cc4  sh    0, 2(s1)
	04  // flip x
		800204e4  lhu  v0, 4(s0)
		8003d9d8  lhu  a1, 4(a0)
			if a1 == 0
				if v0 == 1
					8003da3c  sh  v1, 4(a0) // 1 ->
				else
					return
			else
				if v0 == 1
					return
				else
					8003da70  sh   0, 4(a0)
		800425ac  lhu  v1, 4(s4)
	06
		800393a0  lhu  a2, 6(s1)
	08
		800393b4  sh  0, 8(s1)
	0c  object id
		8003da74  sh  0, c(a0)
	0e
		8003da7c  sh  0, e(a0)
	...
	7a
		8001a670  lh  s5, 7a(s4)
	7c
		8001a670  lh  s7, 7c(s4)
	7e
	80
		8001a670  lh  fp, 80(s4)
	...
	82
		8001ac48  lhu  v0, 82(s0)
			v0 += v1
		8001ac54  lhu  v0, 82(s0)
			v0 += 1
		8001ac60  sh   v0, 82(s0)
		8001ac70  lhu  v0, 82(s0)
		8001acb0  lhu  v0, 82(s0)
		8001acc0  lhu  v0, 82(s0)
		8001acd0  sh   v0, 82(s0)
	84
		8001ac6c  sh   v0, 84(s0)
		8001acac  sh   v0, 84(s0)
		8001acc8  sh   v1, 84(s0)
	...
	90  // dpad input
		7 8 9
		4 0 6
		1 2 3
		80017894  sh   0, 90(v1)
		800179c8  sh  v0, 90(s1)
	92
	94  // button input
		80017898  sh    0, 94(v1)
		800179dc  sh   v0, 94(s1)
		80017a04  sh   s2, 94(s1)
		80017a14  lh   v0, 94(s1)
		80017a6c  lhu  v0, 94(s1)
	96  // button input
		80017a28  lh   v0, 96(s1)
		80017a44  lh   v0, 96(s1)
		80017a74  sh   v0, 96(s1)
	98
		8001789c  sh    0, 98(v1)
		80017a40  sh   a2, 98(a1)
	...
	a8
		800178a0  sh    0, a8(v1)
		80017a52  sh   a2, a8(v1)
	...
	d8
	da
		80039378  lh  v0, da(s1)
	dc
		80039398  lh  a0, dc(s1)
	de
	e0
	e2
		80039644  lh  v0, e2(s1)
		80043098  lh  a3, e2(s0)
	e4
		80039650  lh  v0, e4(s1)
		800430b8  lh  v0, e4(s0)
	e6
	e8  // pos x
		8002028c  lw  v1, e8(v1)
			if v1 < (a0-48)
			else
		800202b0  lw  v1, e8(v1)
			if v1 < (a0+28)
			else
		80020470  lw  s4, e8(s0)
			v0 = [8009ff6c] - 48
		800204bc  sw  v0, e8(s0)
			v0 = [8009ff6c] + 188
		800204e0  sw  v0, e8(s0)
		800204f4  lw  a0, e8(s0)
			if s4 < (a0+10)
			else
		80020528  lw  a0, e8(s0)
			if (a0-10) < s5
			else
	ec  // pos y
		80020474  lw  s6, ec(s0)
		80020590  lw  v1, ec(s0)
	f0
		80020478  lw  fp, f0(s0)
		800205b4  lw  v1, f0(s0)
	f4  // pos x
	f8  // pos y
	fc
	100 // velocity x
	104 // velocity y
	...
	138
	13a
		8001a8c8  lhu  v1, 13a(s0)
		8001a8f0  lhu  v1, 13a(s0)
		8001a914  lhu  v0, 13a(s0)
		8001a9b0  lhu  v1, 13a(s0)
		8001aa2c  lhu  v1, 13a(s0)
	13c
		8001a7c8  lh  v0, 13c(s0)
			v0 *= 3
		8001a7f0  lh  v0, 13c(s0)
			v0 *= 3
		8001a818  lh  v0, 13c(s0)
			v0 *= 3
		8001a884  lh  v0, 13c(s0)
		8001a890  lh  v0, 13c(s0)
		8001a89c  lh  v0, 13c(s0)
	13e
	...
	hitbox
		0 : 21c  240  264  276
		1 : 220  244  266  278
		2 : 224  248  268  27a
		3 : 228  24c  26a  27c
		4 : 22c  250  26c  27e
		5 : 230  254  26e  280
		6 : 234  258  270  282
		7 : 238  25c  272  284
		8 : 23c  260  274  286
	288
	...
	300  // hp
		8001aa84  lh  v1, 300(s0)
		if v1 < 2
			8001abac  lhu  v0, 300(s0)
				v0 -= 1
		else
			8001aba0  lhu  v0, 300(s0)
				v1 -= v1
		8001abb8  sh   v0, 300(s0)
		8001abec  lh   a0, 300(s0)
		8001ac0c  lh   v0, 300(s4)
		8001ac7c  lh   v1, 300(s4)
		8001acd4  lh   v0, 300(s0)
	302  // draw hp
	304  // max hp
		8001aa94  lh   a0, 304(s0)
		8001abd4  lhu  v0, 304(s0)
			t2 = sint16(v0) * 0.166666
			v0 = t2 - (v0 << 10 >> 1f)
	...
	310
		80039490  lhu  v0, 310(s1)
			v0 &= 1
		80039558  lhu  v0, 310(s1)
			v0 &= 2
		80039624  lhu  v0, 310(s1)
			v0 &= 4

// koh max hp = c0
//   v0 = c00000
//   t2 = c0 * 0.166666
//   v0 = sint16(20 - 0) = 20
//   if hp < 20
//   else

// v1 = (pl hp * a / pl max hp) - (en hp * a / en max hp)
// if v1 >= 0
//   a2 = v1
// else
//   a2 = 0 - v1
//
sub_8001a5bc(a0 , a1 , s3 , s2)
	s0 = a0 * 324 + 801ddaa0 // player data
	v0 = a1 * 324 + 801ddbd2
		= a1 * 324 + 801ddaa0 + 132
	s4 = lh(v0) * 324 + 801ddaa0 // enemy data
	if lh(800a0232) != 0
		return

	if hp < 0
	else
		if max hp < hp
			s6 = 0
		else
			v0 = max hp - hp
			if v0 >= 0
				s6 = v0 >> 4
			else
				s6 = (v0 + f) >> 4
		v0 = [
			64 , 61 , 5d , 59 , // 1.00 , 0.97 , 0.93 , 0.89
			54 , 51 , 4e , 4b , // 0.84 , 0.81 , 0.78 , 0.75
			48 , 44 , 40 , 3e , // 0.72 , 0.68 , 0.64 , 0.62
			34 , 32 , 28 , 20 , // 0.52 , 0.5  , 0.4  , 0.32
			18 , 10             // 0.24 , 0.16
		]
		// hi(n * 51eb851f) >> 5
		// == 32/100 * 1/32
		// == 0.01
		dmg = 1 * v0[s6] * 0.01
		if dmg < 2
			hp -= 1
		else
			hp -= dmg

// s3
//   throw,fireball = 3
//   punch = 7

sub_80042adc
	s5 = a1
	if s5 == 2  lhu  s7, 18(s2)
	if s5 == 3  lhu  s7, 14(s2)
	if s5 == 4  lhu  s7, 16(s2)
	if s5 == 1  lhu  s7, 1a(s2)

	4  10  16  1
	3   8  14  0
	2  20  18  2
	1  40  1a  3

sub_80042584
	hitflag = 12(801d4b40)
	plact8  =  8(801d4b40)
	plwork4 =  4(801ddaa0)
	case  plwork4
		0:
			s0 = plact8
		1:
			case  plact8
				0:  s0 = 1
				1:  s0 = 0
				2:  s0 = 3
				3:  s0 = 2
			esac
		2:
			s0 = (plact8 + 2) & 3
		3:
			s0 = plwork4 - plact8
	esac
	if  (hitflag & 10) == 0
		sub_80042adc(workid , 4 , s0 , plact)
	if  (hitflag &  8) == 0
		sub_80042adc(workid , 3 , s0 , plact)
	if  (hitflag & 20) == 0
		sub_80042adc(workid , 2 , s0 , plact)
	if  (hitflag & 40) == 0
		sub_80042adc(workid , 1 , s0 , plact)
	if  hitflag & 80
		136(plwork) |= 1
	else
		136(plwork) |= 2c(plact)


sub_80042fac
	if 208(plwork) < 8
	else
		return

	a3 = e2(plwork)
	v0 = e4(plwork)

	a1 = a8(plact) * a3
	if a1 < 0
		a1 += ff
	acta8 = a1 >> 8

	a2 = ac(plact) * v0
	if a2 < 0
		a2 += ff
	actac = a2 >> 8

	a3 = b0(plact) * a3
	if a3 < 0
		a3 += ff
	actb0 = a3 >> 8

	v0 = b2(plact) * v0
	if v0 < 0
		v0 += ff
	actb2 = v0 >> 8

	case  s4
		0:  v0 = e8(plwork     ) + acta8
		1:  v0 = e8(plwork+s1*4) - acta8
		2:  v0 = e8(plwork+s1*4) + acta8
		3:  v0 = e8(plwork     ) - acta8
	esac
	21c(plwork+s1*4) = v0

	v0 = ec(plwork) + actac
	240(plwork+s1*4) = v0

	264(plwork+s1*2) = actb0
	276(plwork+s1*2) = actb2

	0 : 21c  240  264  276
	1 : 220  244  266  278
	2 : 224  248  268  27a
	3 : 228  24c  26a  27c
	4 : 22c  250  26c  27e
	5 : 230  254  26e  280
	6 : 234  258  270  282
	7 : 238  25c  272  284
	8 : 23c  260  274  286
==============================
1 << 4 - 1 << 2
= -11 11--
= 3c , 1e*2 , f*4

801e89f8 + n * 3c

[801e89f8..801e8a33]?!!
	0
		800397c0  sh  a0, 0(v1) // 1 ->
	...
	800397c8  sh  t2, 1c(v1) // e2(plwork) ->
	800397cc  sh  t3, 1e(v1) // e4(plwork) ->
	800397d0  sw  t4, 20(v1) // 34(plact ) ->
	800397d4  sw  t5, 24(v1) // 38(plact ) ->
	800397d8  sh  t6, 28(v1) // dc(plwork) ->
	800397dc  sh  t7, 2a(v1) // 1c(plact ) ->
	800397e0  sh  t8, 2c(v1) // e0(plwork) ->
	800397e4  sh  t9, 2e(v1) //  8(plact ) ->
	800397e8  sh  t1, 32(v1) //  1 ->
	800397ec  sh  s0, 30(v1) // e6(plwork) ->
==============================
801cda30..801cda70  sect1 spfiles
801cda70..801cdab0  sect0 spfiles

jal  80042758
	v0 = 801cda70 + c(plwork) * 4
	v1 = v0 + 2(plwork) * 4
		v0 += v1
		0(v0) ->  0(plact)
		1(v0) ->  2(plact)
		v0 += 2
	v0 += 6(plwork) * 8
		0(v0) ->  4(plact)
		1(v0) ->  6(plact)
		2(v0) ->  8(plact)
		3(v0) ->  a(plact)
		4(v0) ->  c(plact)
		5(v0) ->  e(plact)
		6(v0) -> 10(plact)
		7(v0) -> 12(plact)

	a0 = 801cda30 + c(plwork) * 4
	v0 = 4(plact) * 4 + a0
		v0 = 0(v0)
		a0 += v0
		0(a0) -> 14(plact)
		1(a0) -> 16(plact)
		2(a0) -> 18(plact)
		3(a0) -> 1a(plact)
		4(a0) -> 1c(plact)
		5(a0) -> 1e(plact)
		6(a0) -> 20(plact) sint
		7(a0) -> 22(plact) sint
		8(a0) -> 24(plact)
		9(a0) -> 26(plact)
		a(a0) -> 28(plact)
		b(a0) -> 2a(plact)
		c(a0) -> 2c(plact)
		d(a0) -> 2e(plact)
		e(a0) -> 30(plact)
		f(a0) -> 34(plact) sint
		10(a0) -> 38(plact) sint
==============================
1 << 3 + 1 << 2 + 1 << 2 + 1 << 2 + 1 << 2
= 1--1 -1-1 -1--
= 801b52e0 + n * 954

input = 801cc968
	01     L2
	02     R2
	04     L1
	08     R1
	10     triangle
	20     circle
	40     cross
	80     square
	00 01  select
	00 02
	00 04
	00 08  start
	00 10  dpad up
	00 20  dpad right
	00 40  dpad down
	00 80  dpad left
map action / dpad = 80085d5c
	0=0 1=8 2=6 3=9
	4=2 5=0 6=3 7=0
	8=4 9=7 a=0 b=0
	c=1 d=0 e=0 f=0
		7 8 9   8|1  1  2|1
		4 0 6 = 8    0  2
		1 2 3   8|4  4  2|4

[801b52e0..801b5c33]?!!
	8001779c  lh  v0, 928(a2)
	800177b0  lh  v0, 92a(a2)  // a0 |= 2
	800177c8  lh  v0, 92c(a2)  // a0 |= 4
	800177e0  lh  v0, 92e(a2)  // a0 |= 8
	800177f8  lh  v0, 930(a2)  // a0 |= 10
	80017810  lh  v0, 932(a2)  // a0 |= 20
	80017828  lh  v0, 934(a2)  // a0 |= 40
	80017840  lh  v0, 936(a2)  // a0 |= 80
		a0 |= ((input >> c) & f) << 8

option mode cheat
all boss command list = 801ee48c
	1000  dpad up
	4000  dpad down
	2000  dpad right
	8000  dpad left
	80  square
	40  cross
	10  triangle
	20  circle
set 800a0238 = 01

sub_801ee2b0
	a3 = 0(801ee4a0)
	v0 = a3 << 1
	801ee2d8  lhu  v1, v0(801ee48c) // command list
	801ee2e4  lw   v0, a0(801cd388) // input flag
		if  v1 & v0
			801ee304  v0, a0(801cc968)
				if  v0 & 100  // select is pressed
					v0 = a3 + 1
					v1 = v0 << 1 + 801ee48c
					801ee320  lhu  v1, 0(v1)
					801ee328  sw   v0, 0(801ee4a0)
					if  v1 == 0  // command complete
						801ee338  lhu  v0, 0(800a0238)
							v0 ^= 1
						801ee344  sh    0, 0(800a0378)
						801ee350  sh   v0, 0(800a0238)
						jal  sub_80017a94(5 , 7 , 801ee48c)
						801ee360  sw    0, 0(801ee4a0)
					else
					v0 = 28
					801ee36c  sw  v0, 0(801ee4a4)
					return
				else
					v0 = 28
					801ee36c  sw  v0, 0(801ee4a4)
					return
		else
			801ee378  lw  v0, 0(a1) // a1=801cd388
			if  v0 == 0
				801ee388  lw  v0, 0(801ee4a4)
					v0--
				801ee39c  sw  v0, 0(801ee4a4)
				if  v0 > 0
					return
			else
			v0 = 28
			801ee3ac  sw  v0, 0(801ee4a4) // command next wait
			801ee3b4  sw   0, 0(801ee4a0) // command index
==============================
